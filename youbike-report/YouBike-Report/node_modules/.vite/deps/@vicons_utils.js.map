{
  "version": 3,
  "sources": ["../../@xicons/utils/node_modules/css-render/esm/parse.js", "../../@xicons/utils/node_modules/css-render/esm/render.js", "../../@xicons/utils/node_modules/css-render/esm/utils.js", "../../@xicons/utils/node_modules/css-render/esm/mount.js", "../../@xicons/utils/node_modules/css-render/esm/c.js", "../../@xicons/utils/node_modules/css-render/esm/CssRender.js", "../../@xicons/utils/es/style.js", "../../@vicons/utils/es/IconConfigProvider.js", "../../@vicons/utils/es/config.js", "../../@vicons/utils/es/Icon.js"],
  "sourcesContent": ["function ampCount(selector) {\r\n    let cnt = 0;\r\n    for (let i = 0; i < selector.length; ++i) {\r\n        if (selector[i] === '&')\r\n            ++cnt;\r\n    }\r\n    return cnt;\r\n}\r\n/**\r\n * Don't just use ',' to separate css selector. For example:\r\n * x:(a, b) {} will be split into 'x:(a' and 'b)', which is not expected.\r\n * Make sure comma doesn't exist inside parentheses.\r\n */\r\nconst seperatorRegex = /\\s*,(?![^(]*\\))\\s*/g;\r\nconst extraSpaceRegex = /\\s+/g;\r\n/**\r\n * selector must includes '&'\r\n * selector is trimmed\r\n * every part of amp is trimmed\r\n */\r\nfunction resolveSelectorWithAmp(amp, selector) {\r\n    const nextAmp = [];\r\n    selector.split(seperatorRegex).forEach(partialSelector => {\r\n        let round = ampCount(partialSelector);\r\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\r\n        if (!round) {\r\n            amp.forEach(partialAmp => {\r\n                nextAmp.push(\r\n                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\r\n                (partialAmp && partialAmp + ' ') + partialSelector);\r\n            });\r\n            return;\r\n        }\r\n        else if (round === 1) {\r\n            amp.forEach(partialAmp => {\r\n                nextAmp.push(partialSelector.replace('&', partialAmp));\r\n            });\r\n            return;\r\n        }\r\n        let partialNextAmp = [\r\n            partialSelector\r\n        ];\r\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\r\n        while (round--) {\r\n            const nextPartialNextAmp = [];\r\n            partialNextAmp.forEach(selectorItr => {\r\n                amp.forEach(partialAmp => {\r\n                    nextPartialNextAmp.push(selectorItr.replace('&', partialAmp));\r\n                });\r\n            });\r\n            partialNextAmp = nextPartialNextAmp;\r\n        }\r\n        partialNextAmp.forEach(part => nextAmp.push(part));\r\n    });\r\n    return nextAmp;\r\n}\r\n/**\r\n * selector mustn't includes '&'\r\n * selector is trimmed\r\n */\r\nfunction resolveSelector(amp, selector) {\r\n    const nextAmp = [];\r\n    selector.split(seperatorRegex).forEach(partialSelector => {\r\n        amp.forEach(partialAmp => {\r\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\r\n            nextAmp.push(((partialAmp && partialAmp + ' ') + partialSelector));\r\n        });\r\n    });\r\n    return nextAmp;\r\n}\r\nexport function parseSelectorPath(selectorPaths) {\r\n    let amp = [''];\r\n    selectorPaths.forEach(selector => {\r\n        // eslint-disable-next-line\r\n        selector = selector && selector.trim();\r\n        if (\r\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\r\n        !selector) {\r\n            /**\r\n             * if it's a empty selector, do nothing\r\n             */\r\n            return;\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\r\n        if (selector.includes('&')) {\r\n            amp = resolveSelectorWithAmp(amp, selector);\r\n        }\r\n        else {\r\n            amp = resolveSelector(amp, selector);\r\n        }\r\n    });\r\n    return amp.join(', ').replace(extraSpaceRegex, ' ');\r\n}\r\n", "import { parseSelectorPath } from './parse';\r\nconst kebabRegex = /[A-Z]/g;\r\nfunction kebabCase(pattern) {\r\n    return pattern.replace(kebabRegex, match => '-' + match.toLowerCase());\r\n}\r\n/** TODO: refine it to solve nested object */\r\nfunction upwrapProperty(prop, indent = '  ') {\r\n    if (typeof prop === 'object' && prop !== null) {\r\n        return (' {\\n' +\r\n            Object.entries(prop).map(v => {\r\n                return indent + `  ${kebabCase(v[0])}: ${v[1]};`;\r\n            }).join('\\n') +\r\n            '\\n' + indent + '}');\r\n    }\r\n    return `: ${prop};`;\r\n}\r\n/** unwrap properties */\r\nfunction upwrapProperties(props, instance, params) {\r\n    if (typeof props === 'function') {\r\n        return props({\r\n            context: instance.context,\r\n            props: params\r\n        });\r\n    }\r\n    return props;\r\n}\r\nfunction createStyle(selector, props, instance, params) {\r\n    if (!props)\r\n        return '';\r\n    // eslint-disable-next-line\r\n    const unwrappedProps = upwrapProperties(props, instance, params);\r\n    if (!unwrappedProps)\r\n        return '';\r\n    if (typeof unwrappedProps === 'string') {\r\n        return `${selector} {\\n${unwrappedProps}\\n}`;\r\n    }\r\n    const propertyNames = Object.keys(unwrappedProps);\r\n    if (propertyNames.length === 0) {\r\n        if (instance.config.keepEmptyBlock)\r\n            return selector + ' {\\n}';\r\n        return '';\r\n    }\r\n    const statements = selector\r\n        ? [\r\n            selector + ' {'\r\n        ]\r\n        : [];\r\n    propertyNames.forEach(propertyName => {\r\n        const property = unwrappedProps[propertyName];\r\n        if (propertyName === 'raw') {\r\n            statements.push('\\n' + property + '\\n');\r\n            return;\r\n        }\r\n        propertyName = kebabCase(propertyName);\r\n        if (property !== null && property !== undefined) {\r\n            statements.push(`  ${propertyName}${upwrapProperty(property)}`);\r\n        }\r\n    });\r\n    if (selector) {\r\n        statements.push('}');\r\n    }\r\n    return statements.join('\\n');\r\n}\r\nfunction loopCNodeListWithCallback(children, options, callback) {\r\n    /* istanbul ignore if */\r\n    if (!children)\r\n        return;\r\n    children.forEach(child => {\r\n        if (Array.isArray(child)) {\r\n            loopCNodeListWithCallback(child, options, callback);\r\n        }\r\n        else if (typeof child === 'function') {\r\n            const grandChildren = child(options);\r\n            if (Array.isArray(grandChildren)) {\r\n                loopCNodeListWithCallback(grandChildren, options, callback);\r\n            }\r\n            else if (grandChildren) {\r\n                callback(grandChildren);\r\n            }\r\n        }\r\n        else if (child) {\r\n            callback(child);\r\n        }\r\n    });\r\n}\r\nfunction traverseCNode(node, selectorPaths, styles, instance, params, styleSheet) {\r\n    const $ = node.$;\r\n    if (!$ || typeof $ === 'string') {\r\n        // as a string selector\r\n        selectorPaths.push($);\r\n    }\r\n    else if (typeof $ === 'function') {\r\n        // as a lazy selector\r\n        selectorPaths.push($({\r\n            context: instance.context,\r\n            props: params\r\n        }));\r\n    }\r\n    else { // as a option selector\r\n        if ($.before)\r\n            $.before(instance.context);\r\n        if (!$.$ || typeof $.$ === 'string') {\r\n            selectorPaths.push($.$);\r\n        }\r\n        else /* istanbul ignore else */ if ($.$) {\r\n            selectorPaths.push($.$({\r\n                context: instance.context,\r\n                props: params\r\n            }));\r\n        }\r\n    }\r\n    const selector = parseSelectorPath(selectorPaths);\r\n    const style = createStyle(selector, node.props, instance, params);\r\n    if (styleSheet && style) {\r\n        styleSheet.insertRule(style);\r\n    }\r\n    if (!styleSheet && style.length)\r\n        styles.push(style);\r\n    if (node.children) {\r\n        loopCNodeListWithCallback(node.children, {\r\n            context: instance.context,\r\n            props: params\r\n        }, childNode => {\r\n            if (typeof childNode === 'string') {\r\n                const style = createStyle(selector, { raw: childNode }, instance, params);\r\n                if (styleSheet) {\r\n                    styleSheet.insertRule(style);\r\n                }\r\n                else {\r\n                    styles.push(style);\r\n                }\r\n            }\r\n            else {\r\n                traverseCNode(childNode, selectorPaths, styles, instance, params, styleSheet);\r\n            }\r\n        });\r\n    }\r\n    selectorPaths.pop();\r\n    if ($ && $.after)\r\n        $.after(instance.context);\r\n}\r\nexport function render(node, instance, props, insertRule = false) {\r\n    const styles = [];\r\n    traverseCNode(node, [], styles, instance, props, insertRule\r\n        ? node.instance.__styleSheet\r\n        : undefined);\r\n    if (insertRule)\r\n        return '';\r\n    return styles.join('\\n\\n');\r\n}\r\n", "export function removeElement(el) {\r\n    /* istanbul ignore if */\r\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\r\n    if (!el)\r\n        return;\r\n    const parentElement = el.parentElement;\r\n    /* istanbul ignore else */\r\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\r\n    if (parentElement)\r\n        parentElement.removeChild(el);\r\n}\r\nexport function queryElement(id) {\r\n    return document.querySelector(`style[cssr-id=\"${id}\"]`);\r\n}\r\nexport function createElement(id) {\r\n    const el = document.createElement('style');\r\n    el.setAttribute('cssr-id', id);\r\n    return el;\r\n}\r\n", "/* eslint-disable @typescript-eslint/strict-boolean-expressions */\r\nimport hash from './hash';\r\nimport { render } from './render';\r\nimport { createElement, queryElement, removeElement } from './utils';\r\nif (window) {\r\n    window.__cssrContext = {};\r\n}\r\nfunction getCount(el) {\r\n    const count = el.getAttribute('mount-count');\r\n    if (count === null)\r\n        return null;\r\n    return Number(count);\r\n}\r\nfunction setCount(el, count) {\r\n    el.setAttribute('mount-count', String(count));\r\n}\r\nexport { getCount, setCount };\r\nexport function unmount(intance, node, id, count) {\r\n    const { els } = node;\r\n    // If target is undefined, unmount all styles\r\n    if (id === undefined) {\r\n        els.forEach(removeElement);\r\n        node.els = [];\r\n    }\r\n    else {\r\n        const target = queryElement(id);\r\n        // eslint-disable-next-line\r\n        if (target && els.includes(target)) {\r\n            const mountCount = getCount(target);\r\n            if (!count) {\r\n                if (mountCount !== null) {\r\n                    console.error(`[css-render/unmount]: The style with target='${id}' is mounted in no-count mode.`);\r\n                }\r\n                else {\r\n                    removeElement(target);\r\n                    node.els = els.filter(el => el !== target);\r\n                }\r\n            }\r\n            else {\r\n                if (mountCount === null) {\r\n                    console.error(`[css-render/unmount]: The style with target='${id}' is mounted in count mode.`);\r\n                }\r\n                else {\r\n                    if (mountCount <= 1) {\r\n                        removeElement(target);\r\n                        node.els = els.filter(el => el !== target);\r\n                    }\r\n                    else\r\n                        setCount(target, mountCount - 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction addElementToList(els, target) {\r\n    els.push(target);\r\n}\r\nfunction mount(instance, node, id, props, head, count, boost, force, ssrAdapter\r\n// eslint-disable-next-line @typescript-eslint/no-invalid-void-type\r\n) {\r\n    if (boost && !ssrAdapter) {\r\n        if (id === undefined) {\r\n            console.error('[css-render/mount]: `id` is required in `boost` mode.');\r\n            // @ts-expect-error\r\n            return;\r\n        }\r\n        const cssrContext = window.__cssrContext;\r\n        if (!cssrContext[id]) {\r\n            cssrContext[id] = true;\r\n            render(node, instance, props, boost);\r\n        }\r\n        // @ts-expect-error\r\n        return;\r\n    }\r\n    let target;\r\n    const { els } = node;\r\n    let style;\r\n    if (id === undefined) {\r\n        style = node.render(props);\r\n        id = hash(style);\r\n    }\r\n    if (ssrAdapter) {\r\n        ssrAdapter(id, style !== null && style !== void 0 ? style : node.render(props));\r\n        // @ts-expect-error\r\n        return;\r\n    }\r\n    const queriedTarget = queryElement(id);\r\n    if (force || queriedTarget === null) {\r\n        target = queriedTarget === null ? createElement(id) : queriedTarget;\r\n        if (style === undefined)\r\n            style = node.render(props);\r\n        target.textContent = style;\r\n        // @ts-expect-error\r\n        if (queriedTarget !== null)\r\n            return;\r\n        if (head) {\r\n            const firstStyleEl = document.head.getElementsByTagName('style')[0] || null;\r\n            document.head.insertBefore(target, firstStyleEl);\r\n        }\r\n        else {\r\n            document.head.appendChild(target);\r\n        }\r\n        if (count) {\r\n            setCount(target, 1);\r\n        }\r\n        addElementToList(els, target);\r\n    }\r\n    else {\r\n        const mountCount = getCount(queriedTarget);\r\n        if (count) {\r\n            if (mountCount === null) {\r\n                console.error(`[css-render/mount]: The style with id='${id}' has been mounted in no-count mode.`);\r\n            }\r\n            else {\r\n                setCount(queriedTarget, mountCount + 1);\r\n            }\r\n        }\r\n        else {\r\n            if (mountCount !== null) {\r\n                console.error(`[css-render/mount]: The style with id='${id}' has been mounted in count mode.`);\r\n            }\r\n        }\r\n    }\r\n    // @ts-expect-error\r\n    return queriedTarget !== null && queriedTarget !== void 0 ? queriedTarget : target;\r\n}\r\nexport { mount };\r\n", "import { render } from './render';\r\nimport { mount, unmount } from './mount';\r\nfunction wrappedRender(props) {\r\n    return render(this, this.instance, props);\r\n}\r\n// do not guard node calling, it should throw an error.\r\nfunction wrappedMount(options = {}\r\n// eslint-disable-next-line @typescript-eslint/no-invalid-void-type\r\n) {\r\n    const { target, id, ssr, props, count = false, head = false, boost = false, force = false } = options;\r\n    const targetElement = mount(this.instance, this, id !== null && id !== void 0 ? id : target, props, head, count, boost, force, ssr);\r\n    return targetElement;\r\n}\r\nfunction wrappedUnmount(options = {}) {\r\n    /* istanbul ignore next */\r\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\r\n    const { id, target, delay = 0, count = false } = options;\r\n    if (delay === 0)\r\n        unmount(this.instance, this, id !== null && id !== void 0 ? id : target, count);\r\n    else {\r\n        setTimeout(() => unmount(this.instance, this, id !== null && id !== void 0 ? id : target, count), delay);\r\n    }\r\n}\r\nconst createCNode = function (instance, $, props, children) {\r\n    return {\r\n        instance,\r\n        $,\r\n        props,\r\n        children,\r\n        els: [],\r\n        render: wrappedRender,\r\n        mount: wrappedMount,\r\n        unmount: wrappedUnmount\r\n    };\r\n};\r\nexport const c = function (instance, $, props, children) {\r\n    if (Array.isArray($)) {\r\n        return createCNode(instance, { $: null }, null, $);\r\n    }\r\n    if (Array.isArray(props)) {\r\n        return createCNode(instance, $, null, props);\r\n    }\r\n    else if (Array.isArray(children)) {\r\n        return createCNode(instance, $, props, children);\r\n    }\r\n    else {\r\n        return createCNode(instance, $, props, null);\r\n    }\r\n};\r\n", "import { c } from './c';\r\nimport { queryElement } from './utils';\r\nexport function CssRender(config = {}) {\r\n    let styleSheet = null;\r\n    const cssr = {\r\n        c: ((...args) => c(cssr, ...args)),\r\n        use: (plugin, ...args) => plugin.install(cssr, ...args),\r\n        find: queryElement,\r\n        context: {},\r\n        config,\r\n        get __styleSheet() {\r\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\r\n            if (!styleSheet) {\r\n                const style = document.createElement('style');\r\n                document.head.appendChild(style);\r\n                styleSheet = document.styleSheets[document.styleSheets.length - 1];\r\n                return styleSheet;\r\n            }\r\n            return styleSheet;\r\n        }\r\n    };\r\n    return cssr;\r\n}\r\n", "import { CssRender } from 'css-render';\r\nconst { c } = CssRender();\r\nconst style = c('.xicon', {\r\n    width: '1em',\r\n    height: '1em',\r\n    display: 'inline-flex'\r\n}, [\r\n    c('svg', {\r\n        width: '1em',\r\n        height: '1em'\r\n    }),\r\n    c('svg:not([fill])', {\r\n        fill: 'currentColor'\r\n    })\r\n]);\r\nexport const mountStyle = () => {\r\n    style.mount({ id: 'xicons-icon' });\r\n};\r\n", "import { defineComponent, renderSlot, provide } from 'vue';\r\nexport const iconConfigProviderProps = {\r\n    size: [String, Number],\r\n    color: String,\r\n    tag: String\r\n};\r\nexport const iconConfigInjectionKey = Symbol('IconConfigInjection');\r\nexport const IconConfigProvider = defineComponent({\r\n    name: 'IconConfigProvider',\r\n    props: iconConfigProviderProps,\r\n    setup(props, { slots }) {\r\n        provide(iconConfigInjectionKey, props);\r\n        return () => renderSlot(slots, 'default');\r\n    }\r\n});\r\n", "export const defaultTag = 'span';\r\n", "import { defineComponent, renderSlot, computed, h, onBeforeMount, inject } from 'vue';\r\nimport { mountStyle } from '@xicons/utils';\r\nimport { iconConfigInjectionKey, iconConfigProviderProps } from './IconConfigProvider';\r\nimport { defaultTag } from './config';\r\nexport const Icon = defineComponent({\r\n    name: 'Icon',\r\n    props: iconConfigProviderProps,\r\n    setup(props, { slots }) {\r\n        const IconConfigProvider = inject(iconConfigInjectionKey, null);\r\n        const mergedSizeRef = computed(() => {\r\n            var _a;\r\n            const _size = (_a = props.size) !== null && _a !== void 0 ? _a : IconConfigProvider === null || IconConfigProvider === void 0 ? void 0 : IconConfigProvider.size;\r\n            if (_size === undefined) {\r\n                return undefined;\r\n            }\r\n            if (typeof _size === 'number' || /^\\d+$/.test(_size))\r\n                return `${_size}px`;\r\n            return _size;\r\n        });\r\n        const mergedColorRef = computed(() => {\r\n            const { color } = props;\r\n            if (color === undefined) {\r\n                if (IconConfigProvider) {\r\n                    return IconConfigProvider.color;\r\n                }\r\n                return undefined;\r\n            }\r\n            return color;\r\n        });\r\n        const mergedTagRef = computed(() => {\r\n            var _a;\r\n            const { tag } = props;\r\n            if (tag === undefined) {\r\n                return (_a = IconConfigProvider === null || IconConfigProvider === void 0 ? void 0 : IconConfigProvider.tag) !== null && _a !== void 0 ? _a : defaultTag;\r\n            }\r\n            return tag;\r\n        });\r\n        onBeforeMount(() => {\r\n            mountStyle();\r\n        });\r\n        return () => h(mergedTagRef.value, {\r\n            class: 'xicon',\r\n            style: {\r\n                color: mergedColorRef.value,\r\n                fontSize: mergedSizeRef.value\r\n            }\r\n        }, [\r\n            renderSlot(slots, 'default')\r\n        ]);\r\n    }\r\n});\r\n"],
  "mappings": "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",
  "names": ["style", "style", "style", "c", "IconConfigProvider"]
}
